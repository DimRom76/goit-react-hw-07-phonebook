{"version":3,"sources":["Components/Filter/filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Mainbar/Mainbar.js","Components/Modal/Modal.js","App.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Mainbar/Mainbar.module.css","Components/Modal/Modal.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","operationContacts","fetchContacts","dispatch","get","then","data","catch","error","addContact","values","post","deleteContact","contactId","delete","editContact","id","patch","getAllContacts","state","contacts","items","getFilter","filter","operationSelectors","getLoading","loading","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","el","name","indexOf","createReducer","_","payload","contact","map","todo","contactsReducer","combineReducers","connect","contactsSelectors","onDeleteContact","contactsOperation","onEditContact","className","s","older","number","description","buttom_group","button_list","onClick","idContact","MyTextArea","label","props","useField","field","form_field","htmlFor","form_label","MyTextInput","meta","touched","error_message","onSubmitNew","value","onChangeContact","onSave","schema","Yup","shape","min","max","required","length","initialValues","validationSchema","onSubmit","setSubmitting","resetForm","find","toast","warn","isSubmitting","form","type","placeholder","pattern","rows","disabled","onChange","e","target","form_input","Mainbar","addBtn","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Modal__backdrop","Modal__content","children","Component","App","showModal","toggleModal","setState","prevState","setEditContact","isContactsLoading","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0612ba2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"filter_form_input__Plt2G\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const editContactRequest = createAction('contacts/editContactRequest');\nexport const editContactSuccess = createAction('contacts/editContactSuccess');\nexport const editContactError = createAction('contacts/editContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = values => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', values)\n    .then(({ data }) => {\n      return dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst editContact = values => dispatch => {\n  dispatch(editContactRequest());\n  const { id } = values;\n\n  axios\n    .patch(`/contacts/${id}`, values)\n    .then(({ data }) => {\n      return dispatch(editContactSuccess(data));\n    })\n    .catch(error => dispatch(editContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operationContacts = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  editContact,\n};\n\nexport default operationContacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(el => {\n      const foundPos = el.name.toLowerCase().indexOf(normalizedFilter);\n      return foundPos === -1 ? false : true;\n    });\n  },\n);\n\nconst operationSelectors = {\n  getAllContacts,\n  getFilter,\n  getLoading,\n  getVisibleContacts,\n};\n\nexport default operationSelectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [editContactSuccess]: (state, { payload }) =>\n    state.map(todo => (todo.id === payload.id ? payload : todo)),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [editContactRequest]: () => true,\n  [editContactSuccess]: () => false,\n  [editContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\nexport default contactsReducer;\n","import { connect } from 'react-redux';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport PropTypes from 'prop-types';\n\nimport { contactsOperation, contactsSelectors } from '../../redux/contacts';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact, onEditContact }) {\n  return (\n    <ul className={s.older}>\n      {contacts.map(({ id, name, number, description }) => {\n        return (\n          <li key={id}>\n            <div className=\"contact_container\">\n              <p>Имя: {name}</p>\n              <p>Номер: {number}</p>\n              <p>Описание: {description}</p>\n            </div>\n            <div className={s.buttom_group}>\n              <button\n                className={s.button_list}\n                onClick={() =>\n                  onEditContact({ idContact: id, name, number, description })\n                }\n              >\n                <EditIcon />\n              </button>\n              <button\n                className={s.button_list}\n                onClick={() => onDeleteContact(id)}\n              >\n                <DeleteIcon />\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperation.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { contactsOperation, contactsSelectors } from '../../redux/contacts';\n\nconst MyTextArea = ({ label, ...props }) => {\n  const [field] = useField(props);\n  return (\n    <div className={s.form_field}>\n      <label htmlFor={props.id || props.name} className={s.form_label}>\n        {label}\n      </label>\n      <textarea className=\"text-area\" {...field} {...props} />\n    </div>\n  );\n};\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={s.form_field}>\n      <label htmlFor={props.id || props.name} className={s.form_label}>\n        {label}\n      </label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className={s.error_message}>{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nfunction ContactForm({\n  onSave,\n  onSubmitNew,\n  onChangeContact,\n  contacts,\n  editContact,\n}) {\n  function handleSubmit(values, { setSubmitting, resetForm }) {\n    setSubmitting(false);\n    const findEl = contacts.find(\n      ({ name, number, id }) =>\n        name.toLowerCase() === values.name.toLowerCase() ||\n        (number === values.number && id !== idContact),\n    );\n    if (findEl) {\n      toast.warn('Введенное имя или номер уже есть в справочнике!');\n    } else {\n      idContact\n        ? onChangeContact({ ...values, id: idContact })\n        : onSubmitNew(values);\n      onSave();\n      resetForm();\n    }\n  }\n\n  let schema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(25, 'Too Long!')\n      .required('Requerid'),\n    number: Yup.string().length(9, 'Wrong length!').required('Requerid'),\n  });\n\n  let { idContact, name, number, description } = editContact;\n  if (!idContact) {\n    name = '';\n    number = '';\n    description = '';\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{ name, number, description }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form className={s.form}>\n            <MyTextInput\n              label=\"Имя контакта\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Введите имя...\"\n            />\n\n            <MyTextInput\n              label=\"Номер контакта\"\n              name=\"number\"\n              type=\"tel\"\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n              placeholder=\"555-55-55\"\n            />\n\n            <MyTextArea\n              label=\"Описание\"\n              name=\"description\"\n              rows=\"6\"\n              placeholder=\"Описание контакта...\"\n            />\n\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={s.form_field}\n            >\n              {idContact ? 'Редактировать' : 'Новый контакт'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <ToastContainer />\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmitNew: PropTypes.func.isRequired,\n  onChangeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmitNew: value => dispatch(contactsOperation.addContact(value)),\n  onChangeContact: value => dispatch(contactsOperation.editContact(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nimport s from './filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <h3>Поиск по имени</h3>\n      <input\n        className={s.form_input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Filter from '../Filter/Filter';\nimport AddIcon from '@material-ui/icons/Add';\nimport s from './Mainbar.module.css';\n\nfunction Mainbar({ onClick }) {\n  return (\n    <header className={s.Mainbar}>\n      <Filter />\n      <button className={s.addBtn} type=\"button\" onClick={onClick}>\n        <AddIcon />\n      </button>\n    </header>\n  );\n}\n\nexport default Mainbar;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      if (this.props?.onClose) {\n        this.props.onClose();\n      }\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      if (this.props?.onClose) {\n        this.props.onClose();\n      }\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Modal__backdrop} onClick={this.handleBackdropClick}>\n        <div className={s.Modal__content}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Mainbar from './Components/Mainbar';\nimport Modal from './Components/Modal';\n\nimport { contactsOperation, contactsSelectors } from './redux/contacts';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    editContact: {},\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      showModal: !prevState.showModal,\n      editContact: {},\n    }));\n  };\n\n  setEditContact = editContact => {\n    this.setState(prevState => ({\n      ...prevState,\n      showModal: !prevState.showModal,\n      editContact,\n    }));\n  };\n\n  render() {\n    const { showModal, editContact } = this.state;\n\n    return (\n      <div className=\"container\">\n        {this.props.isContactsLoading && (\n          <Modal>\n            <h1>Обработка данных...</h1>\n          </Modal>\n        )}\n\n        <Mainbar onClick={this.toggleModal} />\n\n        <h1>Phonebook</h1>\n\n        <ContactList onEditContact={this.setEditContact} />\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <ContactForm onSave={this.toggleModal} editContact={editContact} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isContactsLoading: contactsSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperation.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts';\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Pec4\",\"form_field\":\"ContactForm_form_field__3YOuG\",\"form_label\":\"ContactForm_form_label__rt9Qh\",\"error_message\":\"ContactForm_error_message__3J2-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_list\":\"ContactList_button_list__3pjuS\",\"buttom_group\":\"ContactList_buttom_group__3qcU0\",\"older\":\"ContactList_older__qeZsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Mainbar\":\"Mainbar_Mainbar__3gSPJ\",\"addBtn\":\"Mainbar_addBtn__1reWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__7_Bb1\",\"Modal__content\":\"Modal_Modal__content__3pysr\"};"],"sourceRoot":""}